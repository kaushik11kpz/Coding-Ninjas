Code: Rat In A Maze

You are given a N*N maze with a rat placed at maze[0][0]. Find whether any path exist that rat can follow to reach its destination i.e. maze[N-1][N-1]. Rat can move in any direc­tion ( left, right, up and down).
Value of every cell in the maze can either be 0 or 1. Cells with value 0 are blocked means rat can­not enter into those cells and those with value 1 are open.
Input Format
Line 1: Integer N
Next N Lines: Each line will contain ith row elements (separated by space)
Output Format :
The output line contains true if any path exists for the rat to reach its destination otherwise print false.
Sample Input 1 :
3
1 0 1
1 0 1
1 1 1
Sample Output 1 :
true
Sample Input 2 :
3
1 0 1
1 0 1
0 1 1
Sample Output 2 :
 false


public class Solution {

	public static boolean ratInAMaze(int maze[][]){
         int m = maze.length;
         int n = maze[0].length;   
         int[][] path = new int[m][n];  
         int row = 0;
         int col = 0;
         return ratInAMazeHelper(maze,path,row,col,m,n);
         
	}
    public static boolean ratInAMazeHelper(int maze[][], int path[][], int row, int col, int m, int n){
        
        if(row < 0 || row >= m || col < 0 || col >=n || maze[row][col] == 0 || path[row][col] == 1) {
            return false;
        }
        
        path[row][col] = 1;
        
        if(row == m-1 && col == n-1){
            return true;
        }
        if(ratInAMazeHelper(maze,path,row-1,col,m,n)){
            return true;
        }
        if(ratInAMazeHelper(maze,path,row,col+1,m,n)){
            return true;
        }
        if(ratInAMazeHelper(maze,path,row+1,col,m,n)){
            return true;
        }
        if(ratInAMazeHelper(maze,path,row,col-1,m,n)){
            return true;
        }
        return false;
    }
}
